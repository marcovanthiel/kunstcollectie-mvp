// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      String   @default("readonly") // "admin" or "readonly"
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id          Int       @id @default(autoincrement())
  name        String
  address     String?
  city        String?
  country     String?
  email       String?
  phone       String?
  website     String?
  birthDate   DateTime?
  deathDate   DateTime?
  biography   String?
  portraitUrl String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  artworks    Artwork[]
}

model ArtworkType {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  artworks  Artwork[]
}

model Location {
  id          Int           @id @default(autoincrement())
  name        String
  address     String
  postalCode  String?
  city        String
  country     String?
  typeId      Int
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  locationType LocationType @relation(fields: [typeId], references: [id])
  artworks    Artwork[]
}

model LocationType {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  locations Location[]
}

model Artwork {
  id            Int          @id @default(autoincrement())
  title         String
  artistId      Int
  typeId        Int
  height        Float?
  width         Float?
  depth         Float?
  weight        Float?
  year          Int?
  estimated     Boolean      @default(false)
  isEdition     Boolean      @default(false)
  editionDesc   String?
  isSigned      Boolean      @default(false)
  signatureDesc String?
  description   String?
  locationId    Int?
  purchaseDate  DateTime?
  purchasePrice Float?
  supplier      String?
  marketValue   Float?
  insuredValue  Float?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  artist        Artist       @relation(fields: [artistId], references: [id])
  artworkType   ArtworkType  @relation(fields: [typeId], references: [id])
  location      Location?    @relation(fields: [locationId], references: [id])
  images        Image[]
  attachments   Attachment[]
}

model Image {
  id        Int      @id @default(autoincrement())
  artworkId Int
  url       String
  isPrimary Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  artwork   Artwork  @relation(fields: [artworkId], references: [id], onDelete: Cascade)
}

model Attachment {
  id        Int      @id @default(autoincrement())
  artworkId Int
  name      String
  url       String
  type      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  artwork   Artwork  @relation(fields: [artworkId], references: [id], onDelete: Cascade)
}
